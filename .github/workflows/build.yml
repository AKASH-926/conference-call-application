name: Build Maven Project

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_PASSWORD # env variable for token in deploy
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

    - name: Cache Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: react/node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('react/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules-

    - name: Clone ant-media-server-parent
      run: |
        git clone --depth=1 https://github.com/ant-media/ant-media-server-parent.git
        cd ant-media-server-parent
        mvn clean install -DskipTests -Dmaven.javadoc.skip=true -Dgpg.skip=true --quiet
        cd ..

    - name: Build React application
      run: |
        cd react
        sed -i "s#//placeholder for peerconnection_config#peerconnection_config:{\"iceServers\":[{\"urls\":\"turn:${{ secrets.TURN_URL }}\",\"username\":\"${{ secrets.TURN_USER }}\",\"credential\":\"${{ secrets.TURN_PASSWORD }}\"}],\"sdpSemantics\":\"unified-plan\"},#" src/pages/AntMedia.js
        npm install
        npm run build
        cd ..
        cp -a react/build/. webapp/src/main/webapp

    - name: Build Maven project
      run: |
        cd webapp
        mvn clean install -DskipTests -Dgpg.skip=true --quiet
        ls -alh
        ls -alh target/
        cd ..

    - name: Publish to Maven Central
      run: |
        cd webapp
        ls -alh
        ls -alh target/
        mvn deploy --batch-mode -D skipTests --activate-profiles release --no-transfer-progress
      env:
        MAVEN_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}


